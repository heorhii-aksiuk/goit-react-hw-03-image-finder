{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","services/apiService.js","components/Button/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","value","handleChange","target","setState","handleSubmit","e","preventDefault","onSubmitGet","props","className","onSubmit","this","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","webformatURL","largeImageURL","src","alt","ImageGallery","items","map","item","id","BASE_URL","API_KEY","apiService","query","page","a","searchParams","URLSearchParams","q","key","image_type","orientation","per_page","fetch","apiFetch","json","response","hits","Button","loadMore","onClick","App","searchValue","handleLoadMore","prevProps","prevState","prevRequest","currentRequest","trim","prevPage","currentPage","then","catch","console","log","newItems","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81d9978b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Searchbar extends Component {\n  static propTypes = {\n    onSubmitGet: PropTypes.func.isRequired,\n  };\n\n  state = {\n    value: '',\n  };\n\n  handleChange = ({ target }) => {\n    this.setState({ value: target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { onSubmitGet } = this.props;\n    const { value } = this.state;\n    onSubmitGet(value);\n  };\n\n  render() {\n    return (\n      <header className=\"searchbar\">\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"button\">\n            <span className=\"button-label\">Search</span>\n          </button>\n          <input\n            onChange={this.handleChange}\n            className=\"input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ImageGalleryItem extends Component {\n  static propTypes = {\n    webformatURL: PropTypes.string.isRequired,\n    largeImageURL: PropTypes.string.isRequired,\n  };\n\n  render() {\n    const { webformatURL, largeImageURL } = this.props;\n    return (\n      <li className=\"gallery-item\">\n        <img src={webformatURL} alt={largeImageURL} />\n      </li>\n    );\n  }\n}\n\nexport default ImageGalleryItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\n\nclass ImageGallery extends Component {\n  static propTypes = {\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n      }),\n    ),\n  };\n\n  render() {\n    const { items } = this.props;\n    return (\n      <ul>\n        {items.map(item => (\n          <ImageGalleryItem\n            key={item.id}\n            webformatURL={item.webformatURL}\n            largeImageURL={item.largeImageURL}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default ImageGallery;\n","const BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '24011643-a99499b85595b827654661749';\n\nexport default async function apiService(query, page) {\n  const searchParams = new URLSearchParams({\n    q: query,\n    page: page,\n    key: API_KEY,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    per_page: '12',\n  });\n\n  const apiFetch = await fetch(`${BASE_URL}?${searchParams}`);\n  const response = await apiFetch.json();\n  const { hits } = response;\n  return hits;\n}\n","import React, { Component } from 'react';\n\nexport default class Button extends Component {\n  render() {\n    const { loadMore } = this.props;\n    return (\n      <button onClick={loadMore} type=\"button\">\n        Load more\n      </button>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport apiService from './services/apiService';\nimport Button from './components/Button/Button';\n\n// const apiSevice = new ApiService();\n\nclass App extends Component {\n  state = {\n    searchValue: '',\n    items: null,\n    page: 1,\n  };\n\n  handleSubmit = searchValue => {\n    this.setState({ searchValue });\n  };\n\n  handleLoadMore = () => {\n    this.setState(state => ({\n      page: state.page + 1,\n    }));\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevRequest = prevState.searchValue;\n    const currentRequest = this.state.searchValue.trim();\n    const prevPage = prevState.page;\n    const currentPage = this.state.page;\n    const firstPage = 1;\n\n    if (currentRequest === '') {\n      return;\n    } else if (currentRequest !== prevRequest) {\n      this.setState({ page: firstPage, items: null });\n      apiService(currentRequest, firstPage)\n        .then(items => this.setState({ items }))\n        .catch(console.log);\n    } else if (currentPage !== firstPage && currentPage !== prevPage) {\n      apiService(currentRequest, currentPage)\n        .then(newItems =>\n          this.setState({ items: [...this.state.items, ...newItems] }),\n        )\n        .catch(console.log);\n    }\n  }\n\n  render() {\n    const { items } = this.state;\n    return (\n      <>\n        <Searchbar onSubmitGet={this.handleSubmit} />\n        {items && <ImageGallery items={items} />}\n        <Button loadMore={this.handleLoadMore} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}